<?php

// Data functions (insert, update, delete, form) for table xpenses

// This script and data application were generated by AppGini 5.40
// Download AppGini for free from http://bigprof.com/appgini/download/


function xpenses_insert(){
 
	// echo '<script language="javascript"> alert("I am in dml 1");</script>'; 
	global $Translation;

	if($_GET['insert_x']!=''){$_POST=$_GET;}

	// mm: can member insert record?
	$arrPerm=getTablePermissions('xpenses');
	if(!$arrPerm[1]){
		return false;
	}

	$data['date_depense'] = intval($_POST['date_depenseYear']) . '-' . intval($_POST['date_depenseMonth']) . '-' . intval($_POST['date_depenseDay']);
	$data['date_depense'] = parseMySQLDate($data['date_depense'], '1');

	$data['montant'] = makeSafe($_POST['montant']);
		if($data['montant'] == empty_lookup_value){ $data['montant'] = ''; }
	$data['produit'] = makeSafe($_POST['produit']);
		if($data['produit'] == empty_lookup_value){ $data['produit'] = ''; }
	$data['type_payment'] = makeSafe($_POST['type_payment']);
		if($data['type_payment'] == empty_lookup_value){ $data['type_payment'] = ''; }
	$data['compte'] = makeSafe($_POST['compte']);
		if($data['compte'] == empty_lookup_value){ $data['compte'] = ''; }
	$data['categorie_produit'] = makeSafe($_POST['categorie_produit']);
		if($data['categorie_produit'] == empty_lookup_value){ $data['categorie_produit'] = ''; }
	$data['partenaire'] = makeSafe($_POST['partenaire']);
	 	if($data['partenaire'] == empty_lookup_value){ $data['partenaire'] = ''; }
	$data['contrib_partenaire'] = makeSafe($_POST['contrib_partenaire']);
		if($data['contrib_partenaire'] == empty_lookup_value){ $data['contrib_partenaire'] = ''; }
	$data['lieu_achat'] = makeSafe($_POST['lieu_achat']);
		if($data['lieu_achat'] == empty_lookup_value){ $data['lieu_achat'] = ''; }
	$data['raison'] = makeSafe($_POST['raison']);
		if($data['raison'] == empty_lookup_value){ $data['raison'] = ''; }
	$data['imprevu'] = makeSafe($_POST['imprevu']);
		if($data['imprevu'] == empty_lookup_value){ $data['imprevu'] = ''; }
	$data['recurrent'] = makeSafe($_POST['recurrent']);
		if($data['recurrent'] == empty_lookup_value){ $data['recurrent'] = ''; }
	$data['description'] = makeSafe($_POST['description']);
		if($data['description'] == empty_lookup_value){ $data['description'] = ''; }
	$data['photo'] = PrepareUploadedFile('photo', 10240000,'jpg|jpeg|gif|png|pdf', false, '');
	if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('xpenses', 'photo', 'tv'));
	if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('xpenses', 'photo', 'dv'));
	if($data['categorie_produit']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Categorie produit': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['compte']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Compte': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['imprevu']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Imprevu': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['recurrent']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Recurrent': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['montant']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Montant': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($_REQUEST['SelectedID']){
		$res = sql("select * from xpenses where id='" . makeSafe($_REQUEST['SelectedID']) . "'");
		if($row = db_fetch_assoc($res)){
			if(!$data['photo']) $data['photo'] = makeSafe($row['photo']);
		}
	}
	// hook: xpenses_before_insert
	if(function_exists('xpenses_before_insert')){
		$args=array();
		if(!xpenses_before_insert($data, getMemberInfo(), $args)){ return false; }
	}
	$o=array('silentErrors' => true);
	sql('insert into `xpenses` set       
	 `date_depense`=' . (($data['date_depense'] !== '' && $data['date_depense'] !== NULL) ? "'{$data['date_depense']}'" : 'NULL') . ',
	 `montant`=' . (($data['montant'] !== '' && $data['montant'] !== NULL) ? "'{$data['montant']}'" : 'NULL') . ',
	 `produit`=' . (($data['produit'] !== '' && $data['produit'] !== NULL) ? "'{$data['produit']}'" : 'NULL') . ',
	 `type_payment`=' . (($data['type_payment'] !== '' && $data['type_payment'] !== NULL) ? "'{$data['type_payment']}'" : 'NULL') . ',
	 `compte`=' . (($data['compte'] !== '' && $data['compte'] !== NULL) ? "'{$data['compte']}'" : 'NULL') . ',
	 `categorie_produit`=' . (($data['categorie_produit'] !== '' && $data['categorie_produit'] !== NULL) ? "'{$data['categorie_produit']}'" : 'NULL') . ',
	 `partenaire`=' . (($data['partenaire'] !== '' && $data['partenaire'] !== NULL) ? "'{$data['partenaire']}'" : 'NULL') . ',
	 `contrib_partenaire`=' . (($data['contrib_partenaire'] !== '' && $data['contrib_partenaire'] !== NULL) ? "'{$data['contrib_partenaire']}'" : 'NULL') . ',
	 `lieu_achat`=' . (($data['lieu_achat'] !== '' && $data['lieu_achat'] !== NULL) ? "'{$data['lieu_achat']}'" : 'NULL') . ',
	 `raison`=' . (($data['raison'] !== '' && $data['raison'] !== NULL) ? "'{$data['raison']}'" : 'NULL') . ',
	 `imprevu`=' . (($data['imprevu'] !== '' && $data['imprevu'] !== NULL) ? "'{$data['imprevu']}'" : 'NULL') . ',
	 `recurrent`=' . (($data['recurrent'] !== '' && $data['recurrent'] !== NULL) ? "'{$data['recurrent']}'" : 'NULL') . ',
	 `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ',
	 ' . ($data['photo'] != '' ? "`photo`='{$data['photo']}'" : '`photo`=NULL') , $o);

	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"xpenses_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}
	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	$recID=db_insert_id(db_link());

	// hook: xpenses_after_insert
	if(function_exists('xpenses_after_insert')){
		$res = sql("select * from `xpenses` where `id`='" . makeSafe($recID) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID);
		$args=array();
		if(!xpenses_after_insert($data, getMemberInfo(), $args)){ return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID); }
	}
	// mm: save ownership data
	sql("insert into membership_userrecords set tableName='xpenses', pkValue='$recID', memberID='".getLoggedMemberID()."', dateAdded='".time()."', dateUpdated='".time()."', groupID='".getLoggedGroupID()."'", $eo);
	return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID);
}

function xpenses_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);
	// mm: can member delete record?
	$arrPerm=getTablePermissions('xpenses');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='xpenses' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='xpenses' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}
	// hook: xpenses_before_delete
	if(function_exists('xpenses_before_delete')){
		$args=array();
		if(!xpenses_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}
	sql("delete from `xpenses` where `id`='$selected_id'", $eo);
	// hook: xpenses_after_delete
	if(function_exists('xpenses_after_delete')){
		$args=array();
		xpenses_after_delete($selected_id, getMemberInfo(), $args);
	}
	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='xpenses' and pkValue='$selected_id'", $eo);
}


function xpenses_update($selected_id){
	// echo '<script language="javascript"> alert("I am in dml update");</script>';
	global $Translation;
	if($_GET['update_x']!=''){$_POST=$_GET;}
	// mm: can member edit record?
	$arrPerm=getTablePermissions('xpenses');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='xpenses' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='xpenses' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}
	$data['date_depense'] = intval($_POST['date_depenseYear']) . '-' . intval($_POST['date_depenseMonth']) . '-' . intval($_POST['date_depenseDay']);
	$data['date_depense'] = parseMySQLDate($data['date_depense'], '1');
	$data['montant'] = makeSafe($_POST['montant']);
		if($data['montant'] == empty_lookup_value){ $data['montant'] = ''; }
		if($data['montant']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Montant': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['produit'] = makeSafe($_POST['produit']);
		if($data['produit'] == empty_lookup_value){ $data['produit'] = ''; }
	$data['type_payment'] = makeSafe($_POST['type_payment']);
		if($data['type_payment'] == empty_lookup_value){ $data['type_payment'] = ''; }
		if($data['type_payment']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Type payment': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['compte'] = makeSafe($_POST['compte']);
		if($data['compte'] == empty_lookup_value){ $data['compte'] = ''; }
		if($data['compte']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Compte': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['categorie_produit'] = makeSafe($_POST['categorie_produit']);
		if($data['categorie_produit'] == empty_lookup_value){ $data['categorie_produit'] = ''; }
		if($data['categorie_produit']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Categorie Produit': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['partenaire'] = makeSafe($_POST['partenaire']);
	 	if($data['partenaire'] == empty_lookup_value){ $data['partenaire'] = ''; }
	$data['contrib_partenaire'] = makeSafe($_POST['contrib_partenaire']);
		if($data['contrib_partenaire'] == empty_lookup_value){ $data['contrib_partenaire'] = ''; }
	$data['lieu_achat'] = makeSafe($_POST['lieu_achat']);
		if($data['lieu_achat'] == empty_lookup_value){ $data['lieu_achat'] = ''; }
	$data['raison'] = makeSafe($_POST['raison']);
		if($data['raison'] == empty_lookup_value){ $data['raison'] = ''; }
	$data['imprevu'] = makeSafe($_POST['imprevu']);
		if($data['imprevu'] == empty_lookup_value){ $data['imprevu'] = ''; }
		if($data['imprevu']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'imprevu': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['recurrent'] = makeSafe($_POST['recurrent']);
		if($data['recurrent'] == empty_lookup_value){ $data['recurrent'] = ''; }
		if($data['recurrent']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Recurrent': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['description'] = makeSafe($_POST['description']);
		if($data['description'] == empty_lookup_value){ $data['description'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

		if($_POST['photo_remove'] == 1){
		$data['photo'] = '';
	}else{
		$data['photo'] = PrepareUploadedFile('photo', 10240000, 'jpg|jpeg|gif|png|pdf', false, "");
		if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('xpenses', 'photo', 'tv'));
		if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('xpenses', 'photo', 'dv'));
	}
	// hook: xpenses_before_update
	if(function_exists('xpenses_before_update')){
		$args=array();
		if(!xpenses_before_update($data, getMemberInfo(), $args)){ return false; }
	}
	$o=array('silentErrors' => true);
	sql('update `xpenses` set       
	 `date_depense`=' . (($data['date_depense'] !== '' && $data['date_depense'] !== NULL) ? "'{$data['date_depense']}'" : 'NULL') . ',
	 `montant`=' . (($data['montant'] !== '' && $data['montant'] !== NULL) ? "'{$data['montant']}'" : 'NULL') . ',
	 `produit`=' . (($data['produit'] !== '' && $data['produit'] !== NULL) ? "'{$data['produit']}'" : 'NULL') . ',
	 `type_payment`=' . (($data['type_payment'] !== '' && $data['type_payment'] !== NULL) ? "'{$data['type_payment']}'" : 'NULL') . ',
	 `compte`=' . (($data['compte'] !== '' && $data['compte'] !== NULL) ? "'{$data['compte']}'" : 'NULL') . ',
	 `categorie_produit`=' . (($data['categorie_produit'] !== '' && $data['categorie_produit'] !== NULL) ? "'{$data['categorie_produit']}'" : 'NULL') . ',
	 `partenaire`=' . (($data['partenaire'] !== '' && $data['partenaire'] !== NULL) ? "'{$data['partenaire']}'" : 'NULL') . ',
	 `contrib_partenaire`=' . (($data['contrib_partenaire'] !== '' && $data['contrib_partenaire'] !== NULL) ? "'{$data['contrib_partenaire']}'" : 'NULL') . ',
	 `lieu_achat`=' . (($data['lieu_achat'] !== '' && $data['lieu_achat'] !== NULL) ? "'{$data['lieu_achat']}'" : 'NULL') . ',
	 `raison`=' . (($data['raison'] !== '' && $data['raison'] !== NULL) ? "'{$data['raison']}'" : 'NULL') . ',
	 `imprevu`=' . (($data['imprevu'] !== '' && $data['imprevu'] !== NULL) ? "'{$data['imprevu']}'" : 'NULL') . ',
	 `recurrent`=' . (($data['recurrent'] !== '' && $data['recurrent'] !== NULL) ? "'{$data['recurrent']}'" : 'NULL') . ',
	 `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ',
	 ' . ($data['photo']!='' ? "`photo`='{$data['photo']}'" : ($_POST['photo_remove'] != 1 ? '`photo`=`photo`' : '`photo`=NULL')) . " where `id`='".makeSafe($selected_id)."'", $o);


	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="xpenses_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}
	// hook: pirl_dashboad_after_update
	if(function_exists('xpenses_after_update')){
		$res = sql("SELECT * FROM `xpenses` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!xpenses_after_update($data, getMemberInfo(), $args)){ return; }
	}
	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='xpenses' and pkValue='".makeSafe($selected_id)."'", $eo);
}
////*********************************** restart from here ******************************//////////////

function xpenses_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	// mm: get table permissions
	$arrPerm=getTablePermissions('xpenses');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }

	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}
	//$filterer_external_entity_name = thisOr(undo_magic_quotes($_REQUEST['filterer_external_entity_name']), '');
	
	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');

	// combobox: date_depense
	$combo_date_depense = new DateCombo;
	$combo_date_depense->DateFormat = "mdy";
	$combo_date_depense->MinYear = 1900;
	$combo_date_depense->MaxYear = 2100;
	$combo_date_depense->DefaultDate = parseMySQLDate('1', '1');
	$combo_date_depense->MonthNames = $Translation['month names'];
	$combo_date_depense->NamePrefix = 'date_depense';

	//combo type_payment
	$combo_type_payment = new Combo;
	$combo_type_payment->ListType = 0;
	$combo_type_payment->MultipleSeparator = ', ';
	$combo_type_payment->ListBoxHeight = 10;
	$combo_type_payment->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/xpenses.type_payment.csv')){
		$type_payment_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/xpenses.type_payment.csv')));
		$combo_type_payment->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($type_payment_data)));
		$combo_type_payment->ListData = $combo_type_payment->ListItem;
	}else{
		$combo_type_payment->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Carte;;Comptant;;Virement;;Cheque")));
		$combo_type_payment->ListData = $combo_type_payment->ListItem;
	}
	$combo_type_payment->SelectName = 'type_payment';
	$combo_type_payment->AllowNull = false;

	//combo compte
	$combo_compte = new Combo;
	$combo_compte->ListType = 0;
	$combo_compte->MultipleSeparator = ', ';
	$combo_compte->ListBoxHeight = 10;
	$combo_compte->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/xpenses.type_payment.csv')){
		$compte_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/xpenses.type_payment.csv')));
		$combo_compte->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($compte_data)));
		$combo_compte->ListData = $combo_compte->ListItem;
	}else{
		$combo_compte->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("LCL;;BNP;;UnitCredit;;Comptant")));
		$combo_compte->ListData = $combo_compte->ListItem;
	}
	$combo_compte->SelectName = 'compte';
	$combo_compte->AllowNull = false;

	//combo categorie_produit
	$combo_categorie_produit = new Combo;
	$combo_categorie_produit->ListType = 0;
	$combo_categorie_produit->MultipleSeparator = ', ';
	$combo_categorie_produit->ListBoxHeight = 10;
	$combo_categorie_produit->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/xpenses.type_payment.csv')){
		$categorie_produit_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/xpenses.type_payment.csv')));
		$combo_categorie_produit->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($categorie_produit_data)));
		$combo_categorie_produit->ListData = $combo_categorie_produit->ListItem;
	}else{
		$combo_categorie_produit->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Alimentation;;Voiture;;Cometique;;Don;;Bien-etre;;Transport;;Divertissement;;Administratif;;Cadeau;;Transfert argent;;sante;;aide a la famille")));
		$combo_categorie_produit->ListData = $combo_categorie_produit->ListItem;
	}
	$combo_categorie_produit->SelectName = 'categorie_produit';
	
	//combo imprevu
	$combo_imprevu = new Combo;
	$combo_imprevu->ListType = 2;
	$combo_imprevu->MultipleSeparator = ', ';
	$combo_imprevu->ListBoxHeight = 10;
	$combo_imprevu->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/xpenses.imprevu.csv')){
		$imprevu_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/xpenses.imprevu.csv')));
		$combo_imprevu->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($imprevu_data)));
		$combo_imprevu->ListData = $combo_imprevu->ListItem;
	}else{
		$combo_imprevu->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No")));
		$combo_imprevu->ListData = $combo_imprevu->ListItem;
	}
	$combo_imprevu->SelectName = 'imprevu';
	$combo_imprevu->AllowNull = false;

	// combo recurrent
	$combo_recurrent = new Combo;
	$combo_recurrent->ListType = 2;
	$combo_recurrent->MultipleSeparator = ', ';
	$combo_recurrent->ListBoxHeight = 10;
	$combo_recurrent->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/xpenses.recurrent.csv')){
		$recurrent_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/xpenses.recurrent.csv')));
		$combo_recurrent->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($recurrent_data)));
		$combo_recurrent->ListData = $combo_recurrent->ListItem;
	}else{
		$combo_recurrent->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No")));
		$combo_recurrent->ListData = $combo_recurrent->ListItem;
	}
	$combo_recurrent->SelectName = 'recurrent';
	$combo_recurrent->AllowNull = false;

	
	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";

		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='xpenses' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='xpenses' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){

			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}
		// can edit?
			
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}
		$res = sql("select * from `xpenses` where `id`='".makeSafe($selected_id)."'", $eo);

		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found']);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_date_depense->DefaultDate = $row['date_depense'];
		$combo_type_payment->SelectedData = $row['type_payment'];
		$combo_compte->SelectedData = $row['compte'];
		$combo_categorie_produit->SelectedData = $row['categorie_produit'];
		$combo_imprevu->SelectedData = $row['imprevu'];
		$combo_recurrent->SelectedData = $row['recurrent'];
	}else{
		$combo_type_payment->SelectedText = ( $_REQUEST['FilterField'][1]=='4' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "Carte");
		$combo_compte->SelectedText = ( $_REQUEST['FilterField'][1]=='5' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "LCL");
		$combo_categorie_produit->SelectedText = ( $_REQUEST['FilterField'][1]=='6' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "Alimentation");
		$combo_imprevu->SelectedText = ( $_REQUEST['FilterField'][1]=='7' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "No");
		$combo_recurrent->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "No");
	}
	$combo_type_payment->Render();
	$combo_compte->Render();
	$combo_categorie_produit->Render();
	$combo_imprevu->Render();
	$combo_recurrent->Render();
	ob_start();
	?>

	<?php
	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();
	// code for template based detail view forms
	// open the detail view template
	if($dvprint){
		$templateCode = @file_get_contents('./templates/xpenses_templateDVP.html');
	}else{
		$templateCode = @file_get_contents('./templates/xpenses_templateDV.html');
	}
	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'New Xpenses', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return xpenses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return xpenses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}
	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}
	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return xpenses_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}
	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){

		$jsReadOnly .= "\tjQuery('#date_depense').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_depenseDay, #date_depenseMonth, #date_depenseYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#montant').replaceWith('<div class=\"form-control-static\" id=\"montant\">' + (jQuery('#montant').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#produit').replaceWith('<div class=\"form-control-static\" id=\"produit\">' + (jQuery('#produit').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#type_payment').replaceWith('<div class=\"form-control-static\" id=\"type_payment\">' + (jQuery('#type_payment').val() || '') + '</div>'); jQuery('#type_payment-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#compte').replaceWith('<div class=\"form-control-static\" id=\"compte\">' + (jQuery('#compte').val() || '') + '</div>'); jQuery('#compte-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#categorie_produit').replaceWith('<div class=\"form-control-static\" id=\"categorie_produit\">' + (jQuery('#categorie_produit').val() || '') + '</div>'); jQuery('#categorie_produit-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#partenaire').replaceWith('<div class=\"form-control-static\" id=\"partenaire\">' + (jQuery('#partenaire').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#contrib_partenaire').replaceWith('<div class=\"form-control-static\" id=\"contrib_partenaire\">' + (jQuery('#contrib_partenaire').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#raison').replaceWith('<div class=\"form-control-static\" id=\"raison\">' + (jQuery('#raison').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=imprevu]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=imprevu]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=recurrent]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=recurrent]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#photo').replaceWith('<div class=\"form-control-static\" id=\"photo\">' + (jQuery('#photo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";
		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}
	// process combos
	$templateCode=str_replace('<%%COMBO(date_depense)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_depense->GetHTML(true) . '</div>' : $combo_date_depense->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(date_depense)%%>', $combo_date_depense->GetHTML(true), $templateCode);


	$templateCode=str_replace('<%%COMBO(type_payment)%%>', $combo_type_payment->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(type_payment)%%>', $combo_type_payment->SelectedData, $templateCode);

	$templateCode=str_replace('<%%COMBO(compte)%%>', $combo_compte->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(compte)%%>', $combo_compte->SelectedData, $templateCode);

	$templateCode=str_replace('<%%COMBO(categorie_produit)%%>', $combo_categorie_produit->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(categorie_produit)%%>', $combo_categorie_produit->SelectedData, $templateCode);

	$templateCode=str_replace('<%%COMBO(imprevu)%%>', $combo_imprevu->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(imprevu)%%>', $combo_imprevu->SelectedData, $templateCode);

	$templateCode=str_replace('<%%COMBO(recurrent)%%>', $combo_recurrent->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(recurrent)%%>', $combo_recurrent->SelectedData, $templateCode);


	/* parent tables array: parent table name => array('lookup field name', 'lookup field caption') */
	$parent_tables = array(  'external_entity' => array('external_entity_name', 'External entity'), 'external_contact' => array('external_contact_name', 'External contact'), 'internal_contact' => array('internal_contact_name', 'Internal contact'));
	foreach($parent_tables as $pt => $luf){
		$pt_perm = getTablePermissions($pt);
		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf[0]})%%>", '<button type="button" class="btn btn-default view_parent hspacer-lg" id="' . $pt . '_view_parent" title="' . htmlspecialchars($Translation['View'] . ' ' . $luf[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}
		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$pt})%%>", '<button type="button" class="btn btn-success add_new_parent" id="' . $pt . '_add_new" title="' . htmlspecialchars($Translation['Add New'] . ' ' . $luf[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}
	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(date_depense)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(montant)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(produit)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(type_payment)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(compte)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(categorie_produit)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(partenaire)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(contrib_partenaire)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(lieu_achat)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(raison)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(imprevu)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(recurrent)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(description)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(photo)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=10240000>'.$Translation['upload image'].' <input type="file" name="photo" id="photo">'), $templateCode);
	if($AllowUpdate && $row['photo']!=''){
		$templateCode=str_replace('<%%REMOVEFILE(photo)%%>', '<br><input type="checkbox" name="photo_remove" id="photo_remove" value="1"> <label for="photo_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode=str_replace('<%%REMOVEFILE(photo)%%>', '', $templateCode);
	}
	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', htmlspecialchars($row['id'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);

		$templateCode=str_replace('<%%VALUE(date_depense)%%>', @date('m/d/Y', @strtotime(htmlspecialchars($row['date_depense'], ENT_QUOTES))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date_depense)%%>', urlencode(@date('m/d/Y', @strtotime(htmlspecialchars($urow['date_depense'], ENT_QUOTES)))), $templateCode);
		
		$templateCode=str_replace('<%%VALUE(montant)%%>', htmlspecialchars($row['montant'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(montant)%%>', urlencode($urow['montant']), $templateCode);
		$templateCode=str_replace('<%%VALUE(produit)%%>', htmlspecialchars($row['produit'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(produit)%%>', urlencode($urow['produit']), $templateCode);
		$templateCode=str_replace('<%%VALUE(type_payment)%%>', htmlspecialchars($row['type_payment'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(type_payment)%%>', urlencode($urow['type_payment']), $templateCode);

		$templateCode=str_replace('<%%VALUE(compte)%%>', htmlspecialchars($row['compte'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(compte)%%>', urlencode($urow['compte']), $templateCode);
		$templateCode=str_replace('<%%VALUE(categorie_produit)%%>', htmlspecialchars($row['categorie_produit'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(categorie_produit)%%>', urlencode($urow['categorie_produit']), $templateCode);

		$templateCode=str_replace('<%%VALUE(partenaire)%%>', htmlspecialchars($row['partenaire'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(partenaire)%%>', urlencode($urow['partenaire']), $templateCode);

		$templateCode=str_replace('<%%VALUE(contrib_partenaire)%%>', htmlspecialchars($row['contrib_partenaire'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(contrib_partenaire)%%>', urlencode($urow['contrib_partenaire']), $templateCode);

		$templateCode=str_replace('<%%VALUE(lieu_achat)%%>', htmlspecialchars($row['lieu_achat'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lieu_achat)%%>', urlencode($urow['lieu_achat']), $templateCode);

		$templateCode=str_replace('<%%VALUE(raison)%%>', htmlspecialchars($row['raison'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(raison)%%>', urlencode($urow['raison']), $templateCode);

		$templateCode=str_replace('<%%VALUE(imprevu)%%>', htmlspecialchars($row['imprevu'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(imprevu)%%>', urlencode($urow['imprevu']), $templateCode);

		$templateCode=str_replace('<%%VALUE(recurrent)%%>', htmlspecialchars($row['recurrent'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(recurrent)%%>', urlencode($urow['recurrent']), $templateCode);

		if($AllowUpdate || $AllowInsert){
			$templateCode=str_replace('<%%HTMLAREA(description)%%>', '<textarea name="description" id="description" rows="5">'.htmlspecialchars($row['description'], ENT_QUOTES).'</textarea>', $templateCode);
		}else{
			$templateCode=str_replace('<%%HTMLAREA(description)%%>', $row['description'], $templateCode);
		}
		$templateCode=str_replace('<%%VALUE(description)%%>', nl2br($row['description']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(description)%%>', urlencode($urow['description']), $templateCode);
		$row['photo']=($row['photo']!=''?$row['photo']:'blank.gif');
		$templateCode=str_replace('<%%VALUE(photo)%%>', htmlspecialchars($row['photo'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(photo)%%>', urlencode($urow['photo']), $templateCode);
		
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(date_depense)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date_depense)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(montant)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(montant)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(produit)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(produit)%%>', urlencode(''), $templateCode);

		$templateCode=str_replace('<%%VALUE(type_payment)%%>', 'Carte', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(type_payment)%%>', urlencode('Carte'), $templateCode);
		$templateCode=str_replace('<%%VALUE(compte)%%>', 'LCL', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(compte)%%>', urlencode('LCL'), $templateCode);
		$templateCode=str_replace('<%%VALUE(categorie_produit)%%>', 'Alimentation', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(categorie_produit)%%>', urlencode('Alimentation'), $templateCode);
		$templateCode=str_replace('<%%VALUE(partenaire)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(partenaire)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(contrib_partenaire)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(contrib_partenaire)%%>', urlencode(''), $templateCode);

		$templateCode=str_replace('<%%VALUE(lieu_achat)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lieu_achat)%%>', urlencode(''), $templateCode);

		$templateCode=str_replace('<%%VALUE(raison)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(raison)%%>', urlencode(''), $templateCode);

		$templateCode=str_replace('<%%VALUE(imprevu)%%>', 'No', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(imprevu)%%>', urlencode('No'), $templateCode);
		$templateCode=str_replace('<%%VALUE(recurrent)%%>', 'No', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(recurrent)%%>', urlencode('No'), $templateCode);
		$templateCode=str_replace('<%%HTMLAREA(description)%%>', '<textarea name="description" id="description" rows="5"></textarea>', $templateCode);
		$templateCode=str_replace('<%%VALUE(photo)%%>', 'blank.gif', $templateCode);
	}
	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}
	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);
	// hide links to inaccessible tables
	if($_POST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}
		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}
		$templateCode.="\n});</script>\n";
	}
	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';
	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;
	// handle enforced parent values for read-only lookup fields
	// don't include blank images in lightbox gallery
	$templateCode=preg_replace('/blank.gif" rel="lightbox\[.*?\]"/', 'blank.gif"', $templateCode);
	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);
	// hook: xpenses_dv
	if(function_exists('xpenses_dv')){
		$args=array();
		xpenses_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}
	return $templateCode;
}
?>